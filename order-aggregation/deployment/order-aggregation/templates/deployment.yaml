apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "order-aggregation.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "order-aggregation.name" . }}
    helm.sh/chart: {{ include "order-aggregation.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "order-aggregation.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "order-aggregation.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{- if or .Values.imageCredentials.secretName ( .Values.ace.imageCredentials.secretName ) }}
      imagePullSecrets:
        {{- if .Values.imageCredentials.secretName }}
        - name: {{ .Values.imageCredentials.secretName }}
        {{- end }}
        {{- if .Values.ace.imageCredentials.secretName }}
        - name: {{ .Values.ace.imageCredentials.secretName }}
        {{- end }}
{{- end }}
      initContainers:
        - name: check-kafka-ready
          image: confluentinc/cp-kafka:5.0.1
          command: ['sh', 
                    '-c', 
                    'cub kafka-ready -b {{ .Values.ace.sidecar.brokerHost }}:{{ .Values.ace.sidecar.brokerPort }} 1 60']
      containers:
{{- if .Values.ace.jaeger.enabled }}
        - name: jaeger-agent
          image: jaegertracing/jaeger-agent:1.10.1
          imagePullPolicy: IfNotPresent
          ports:
             - containerPort: 5775
               protocol: UDP
             - containerPort: 6831
               protocol: UDP
             - containerPort: 6832
               protocol: UDP
             - containerPort: 5778
               protocol: TCP
          env:
            - name: COLLECTOR_HOST_PORT
              value: {{ template "ace.jaeger.collector.host-port" . }}
{{- end }}
        - name: {{ .Chart.Name }}-sidecar
          image: "{{ .Values.ace.image.repository }}/sidecar:{{ .Values.ace.image.tag }}"
          imagePullPolicy: {{ .Values.ace.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "order-aggregation.fullname" . }}-sidecar-config
          restartPolicy: Always
          ports:
            - name: sidecar-probe
              containerPort: 50005
          livenessProbe:
            tcpSocket:
              port: sidecar-probe
            initialDelaySeconds: 30
            periodSeconds: 20
        - name: {{ .Chart.Name }}-service
          image: "{{ .Values.image.name}}:{{.Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "order-aggregation.fullname" . }}-config
          ports:
            - name: service-probe
              containerPort: 50006
          livenessProbe:
            tcpSocket:
              port: service-probe
            initialDelaySeconds: 30
            periodSeconds: 20
